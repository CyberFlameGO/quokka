digraph "logical-plan" {
	graph [rankdir=BT]
	node [shape=box]
	18 [label="<class 'logical.DataSetNode'>
Parents:{0: 17}
Targets:"]
	17 [label="<class 'logical.StatefulNode'>
Parents:{0: 11}
Targets:
	18 partitioner: pass_thru
	  predicate: TRUE
	  projection: None
	 batch_funcs: []"]
	11 [label="<class 'logical.StatefulNode'>
Parents:{0: 2, 1: 10}
Targets:
	17 partitioner: broadcast
	  predicate: TRUE
	  projection: {'o_orderdate', 'l_orderkey', 'o_shippriority'}
	 batch_funcs: [functools.partial(<function DataStream.with_column.<locals>.polars_func at 0x7f953dbe63a0>, <function do_3.<locals>.<lambda> at 0x7f953dbe64c0>), functools.partial(<function DataStream._grouped_aggregate.<locals>.f at 0x7f953dbe6550>, ['l_orderkey', 'o_orderdate', 'o_shippriority'], [])]"]
	2 [label="<class 'logical.InputDiskParquetNode'>
Predicate: [('c_mktsegment', '==', 'BUILDING')]
Projection: {'c_custkey'}
Targets:
	11 partitioner: c_custkey
	  predicate: TRUE
	  projection: None
	 batch_funcs: []"]
	2 -> 11
	10 [label="<class 'logical.StatefulNode'>
Parents:{0: 0, 1: 1}
Targets:
	11 partitioner: o_custkey
	  predicate: TRUE
	  projection: {'l_orderkey', 'l_extendedprice', 'l_discount', 'o_shippriority', 'o_orderdate', 'o_custkey'}
	 batch_funcs: []"]
	0 [label="<class 'logical.InputDiskParquetNode'>
Predicate: [('l_shipdate', '>', <pyarrow.TimestampScalar: datetime.datetime(1995, 3, 15, 0, 0)>)]
Projection: {'l_orderkey', 'l_extendedprice', 'l_shipdate', 'l_discount', 'l_commitdate'}
Targets:
	10 partitioner: l_orderkey
	  predicate: l_shipdate > l_commitdate
	  projection: {'l_orderkey', 'l_discount', 'l_extendedprice'}
	 batch_funcs: []"]
	0 -> 10
	1 [label="<class 'logical.InputDiskParquetNode'>
Predicate: [('o_orderdate', '<', <pyarrow.TimestampScalar: datetime.datetime(1995, 3, 15, 0, 0)>)]
Projection: {'o_orderkey', 'o_orderdate', 'o_shippriority', 'o_custkey'}
Targets:
	10 partitioner: o_orderkey
	  predicate: TRUE
	  projection: None
	 batch_funcs: []"]
	1 -> 10
	10 -> 11
	11 -> 17
	17 -> 18
}
